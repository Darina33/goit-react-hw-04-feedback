{"ast":null,"code":"var _jsxFileName = \"/Users/darina/Documents/GitHub/goit-react-hw-02-feedback/src/components/Statistics/Statistics.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Statistics = _ref => {\n  let {\n    good,\n    neutral,\n    bad,\n    countTotalFeedback,\n    countPositiveFeedbackPercentage\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Good:\", good]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Neutral:\", neutral]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Bad:\", bad]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total:\", countTotalFeedback]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Positive feedback:\", countPositiveFeedbackPercentage, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Statistics;\nFeedback.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  addFeedback: PropTypes.func\n};\nexport default Feedback;\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["/Users/darina/Documents/GitHub/goit-react-hw-02-feedback/src/components/Statistics/Statistics.jsx"],"names":["React","PropTypes","Statistics","good","neutral","bad","countTotalFeedback","countPositiveFeedbackPercentage","Feedback","propTypes","options","arrayOf","string","addFeedback","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,UAAU,GAAG,QAAgF;AAAA,MAA/E;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,GAAjB;AAAsBC,IAAAA,kBAAtB;AAA0CC,IAAAA;AAA1C,GAA+E;AAC/F,sBACE;AAAA,4BACE;AAAA,6BAAI;AAAA,4BAASJ,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BAAI;AAAA,+BAAYC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,6BAAI;AAAA,2BAAQC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,6BAAI;AAAA,6BAAUC,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,6BAAI;AAAA,yCAAsBC,+BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQH,CATD;;KAAML,U;AAWNM,QAAQ,CAACC,SAAT,GAAqB;AACnBC,EAAAA,OAAO,EAAET,SAAS,CAACU,OAAV,CAAkBV,SAAS,CAACW,MAA5B,CADU;AAEnBC,EAAAA,WAAW,EAAEZ,SAAS,CAACa;AAFJ,CAArB;AAKA,eAAeN,QAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Statistics = ({ good, neutral, bad, countTotalFeedback, countPositiveFeedbackPercentage}) => {\n    return(\n      <ul>\n        <li><p>Good:{good}</p></li>\n        <li><p>Neutral:{neutral}</p></li>\n        <li><p>Bad:{bad}</p></li>\n        <li><p>Total:{countTotalFeedback}</p></li>\n        <li><p>Positive feedback:{countPositiveFeedbackPercentage}%</p></li>\n      </ul>)\n}\n\nFeedback.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  addFeedback: PropTypes.func,\n};\n\nexport default Feedback;\n"]},"metadata":{},"sourceType":"module"}