{"ast":null,"code":"var _jsxFileName = \"/Users/darina/Documents/GitHub/goit-react-hw-02-feedback/src/components/App.jsx\";\nimport React from \"react\";\nimport FeedbackOptions from \"./FeedbackOptions\";\nimport Statistics from \"./Statistics\";\nimport Section from \"./SectionTitle\";\nimport Notification from \"./Notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.addFeedback = e => {\n      this.setState({\n        [e]: this.state[e] + 1\n      });\n    };\n  }\n\n  countTotalFeedback() {\n    return this.state.good + this.state.neutral + this.state.bad;\n  }\n\n  countPositiveFeedbackPercentage() {\n    return Math.round(this.state.good * 100 / (this.state.neutral + this.state.bad + this.state.good)) || 0;\n  }\n\n  render() {\n    const {\n      good,\n      neutral,\n      bad\n    } = this.state;\n    const options = Object.keys(this.state);\n    const countTotalFeedback = this.countTotalFeedback();\n    const countPositiveFeedbackPercentage = this.countPositiveFeedbackPercentage();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        title: \"Please leave feedback\",\n        children: /*#__PURE__*/_jsxDEV(FeedbackOptions, {\n          options: options,\n          addFeedback: this.addFeedback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Statistics\",\n        children: (countTotalFeedback = 0) ? /*#__PURE__*/_jsxDEV(Statistics, {\n          good: good,\n          neutral: neutral,\n          bad: bad,\n          total: countTotalFeedback,\n          percentage: countPositiveFeedbackPercentage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 63\n        }, this) : /*#__PURE__*/_jsxDEV(Notification, {\n          message: \"There is no feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 191\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/darina/Documents/GitHub/goit-react-hw-02-feedback/src/components/App.jsx"],"names":["React","FeedbackOptions","Statistics","Section","Notification","App","Component","state","good","neutral","bad","addFeedback","e","setState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","render","options","Object","keys"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,OAAO,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/B;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KAD+B;;AAAA,SAOvCC,WAPuC,GAOzBC,CAAC,IAAI;AACjB,WAAKC,QAAL,CAAc;AAAE,SAACD,CAAD,GAAK,KAAKL,KAAL,CAAWK,CAAX,IAAgB;AAAvB,OAAd;AACD,KATsC;AAAA;;AAWvCE,EAAAA,kBAAkB,GAAG;AACnB,WAAO,KAAKP,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWE,OAA7B,GAAuC,KAAKF,KAAL,CAAWG,GAAzD;AACD;;AAEDK,EAAAA,+BAA+B,GAAG;AAChC,WAAOC,IAAI,CAACC,KAAL,CAAY,KAAKV,KAAL,CAAWC,IAAX,GAAkB,GAAnB,IAA2B,KAAKD,KAAL,CAAWE,OAAX,GAAqB,KAAKF,KAAL,CAAWG,GAAhC,GAAsC,KAAKH,KAAL,CAAWC,IAA5E,CAAX,KAAiG,CAAxG;AACD;;AAGDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAAyB,KAAKH,KAApC;AACA,UAAMY,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKd,KAAjB,CAAhB;AACA,UAAMO,kBAAkB,GAAG,KAAKA,kBAAL,EAA3B;AACA,UAAMC,+BAA+B,GAAG,KAAKA,+BAAL,EAAxC;AAEA,wBAAO;AAAA,8BAAK,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,uBAAf;AAAA,+BACR,QAAC,eAAD;AAAiB,UAAA,OAAO,EAAEI,OAA1B;AACA,UAAA,WAAW,EAAE,KAAKR;AADlB;AAAA;AAAA;AAAA;AAAA;AADQ;AAAA;AAAA;AAAA;AAAA,cAAL,eAIL,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,YAAf;AAAA,kBAA6B,CAACG,kBAAkB,GAAG,CAAtB,iBAA2B,QAAC,UAAD;AAAY,UAAA,IAAI,EAAEN,IAAlB;AAAwB,UAAA,OAAO,EAAEC,OAAjC;AAA0C,UAAA,GAAG,EAAEC,GAA/C;AAAoD,UAAA,KAAK,EAAEI,kBAA3D;AAA+E,UAAA,UAAU,EAAEC;AAA3F;AAAA;AAAA;AAAA;AAAA,gBAA3B,gBAA2J,QAAC,YAAD;AAAc,UAAA,OAAO,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AAAxL;AAAA;AAAA;AAAA;AAAA,cAJK;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAOD;;AAjCsC","sourcesContent":["import React from \"react\";\nimport FeedbackOptions from \"./FeedbackOptions\";\nimport Statistics from \"./Statistics\";\nimport Section from \"./SectionTitle\";\nimport Notification from \"./Notification\";\n\nexport class App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n  \n  addFeedback = e => {\n    this.setState({ [e]: this.state[e] + 1 });\n  }\n\n  countTotalFeedback() {\n    return this.state.good + this.state.neutral + this.state.bad\n  }\n\n  countPositiveFeedbackPercentage() {\n    return Math.round((this.state.good * 100) / (this.state.neutral + this.state.bad + this.state.good)) || 0\n  }\n\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const options = Object.keys(this.state)\n    const countTotalFeedback = this.countTotalFeedback()\n    const countPositiveFeedbackPercentage = this.countPositiveFeedbackPercentage()\n\n    return <div><Section title=\"Please leave feedback\">\n        <FeedbackOptions options={options}\n        addFeedback={this.addFeedback} />\n      </Section>\n      <Section title=\"Statistics\">{(countTotalFeedback = 0) ? <Statistics good={good} neutral={neutral} bad={bad} total={countTotalFeedback} percentage={countPositiveFeedbackPercentage}/> : <Notification message=\"There is no feedback\"/>}\n      </Section>\n    </div>\n  }\n}\n"]},"metadata":{},"sourceType":"module"}