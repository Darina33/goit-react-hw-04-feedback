{"ast":null,"code":"var _jsxFileName = \"/Users/darina/Documents/GitHub/goit-react-hw-04-feedback/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport FeedbackOptions from \"./FeedbackOptions\";\nimport Statistics from \"./Statistics\";\nimport Section from \"./SectionTitle\";\nimport Notification from \"./Notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const goodIncrement = () => {\n    setGood(state => state + 1);\n  };\n\n  const neutralIncrement = () => {\n    setNeutral(state => state + 1);\n  };\n\n  const badIncrement = () => {\n    setBad(state => state + 1);\n  };\n\n  useEffect(() => {\n    const totalFeedback = good + bad + neutral;\n    return totalFeedback;\n  }); // countPositiveFeedbackPercentage() {\n  //   return Math.round((this.state.good * 100) / (this.state.neutral + this.state.bad + this.state.good)) || 0\n  // }\n  // const { good, neutral, bad } = this.state;\n  // const options = Object.keys(this.state)\n  // const countTotalFeedback = this.countTotalFeedback()\n  // const countPositiveFeedbackPercentage = this.countPositiveFeedbackPercentage()\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Section, {\n      title: \"Please leave feedback\",\n      children: /*#__PURE__*/_jsxDEV(FeedbackOptions, {\n        options: options,\n        addFeedback: this.addFeedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      title: \"Statistics\",\n      children: countTotalFeedback ? /*#__PURE__*/_jsxDEV(Statistics, {\n        good: goodIncrement,\n        neutral: neutralIncrement,\n        bad: badIncrement,\n        total: useEffect,\n        percentage: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(Notification, {\n        message: \"There is no feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 126\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 12\n  }, this);\n}\n\n_s(App, \"4x9OXKTXkaOBYWq45Gv5b2F8gTk=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/darina/Documents/GitHub/goit-react-hw-04-feedback/src/components/App.jsx"],"names":["useState","useEffect","FeedbackOptions","Statistics","Section","Notification","App","good","setGood","neutral","setNeutral","bad","setBad","goodIncrement","state","neutralIncrement","badIncrement","totalFeedback","options","addFeedback","countTotalFeedback"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,CAAD,CAA9B;;AAEA,QAAMa,aAAa,GAAG,MAAM;AAC1BL,IAAAA,OAAO,CAACM,KAAK,IAAIA,KAAK,GAAG,CAAlB,CAAP;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BL,IAAAA,UAAU,CAACI,KAAK,IAAIA,KAAK,GAAG,CAAlB,CAAV;AACD,GAFD;;AAIA,QAAME,YAAY,GAAG,MAAM;AACzBJ,IAAAA,MAAM,CAACE,KAAK,IAAIA,KAAK,GAAG,CAAlB,CAAN;AACD,GAFD;;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,aAAa,GAAGV,IAAI,GAAGI,GAAP,GAAaF,OAAnC;AACA,WAAOQ,aAAP;AACD,GAHQ,CAAT,CAjB4B,CAuB5B;AACA;AACA;AAGE;AACA;AACA;AACA;;AAEA,sBAAO;AAAA,4BACL,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,uBAAf;AAAA,6BACA,QAAC,eAAD;AAAiB,QAAA,OAAO,EAAEC,OAA1B;AACE,QAAA,WAAW,EAAE,KAAKC;AADpB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADK,eAKL,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,YAAf;AAAA,gBAA6BC,kBAAkB,gBAC7C,QAAC,UAAD;AAAY,QAAA,IAAI,EAAEP,aAAlB;AAAiC,QAAA,OAAO,EAAEE,gBAA1C;AAA4D,QAAA,GAAG,EAAEC,YAAjE;AAA+E,QAAA,KAAK,EAAEf,SAAtF;AAAiG,QAAA,UAAU,EAAE;AAA7G;AAAA;AAAA;AAAA;AAAA,cAD6C,gBACwE,QAAC,YAAD;AAAc,QAAA,OAAO,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADvH;AAAA;AAAA;AAAA;AAAA,YALK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AASD;;GA1CqBK,G;;KAAAA,G","sourcesContent":["import { useState, useEffect } from \"react\";\nimport FeedbackOptions from \"./FeedbackOptions\";\nimport Statistics from \"./Statistics\";\nimport Section from \"./SectionTitle\";\nimport Notification from \"./Notification\";\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const goodIncrement = () => {\n    setGood(state => state + 1)\n  }\n\n  const neutralIncrement = () => {\n    setNeutral(state => state + 1)\n  }\n\n  const badIncrement = () => {\n    setBad(state => state + 1)\n  }\n\n  useEffect(() => {\n    const totalFeedback = good + bad + neutral;\n    return totalFeedback;\n  })\n\n\n  // countPositiveFeedbackPercentage() {\n  //   return Math.round((this.state.good * 100) / (this.state.neutral + this.state.bad + this.state.good)) || 0\n  // }\n\n\n    // const { good, neutral, bad } = this.state;\n    // const options = Object.keys(this.state)\n    // const countTotalFeedback = this.countTotalFeedback()\n    // const countPositiveFeedbackPercentage = this.countPositiveFeedbackPercentage()\n\n    return <div>\n      <Section title=\"Please leave feedback\">\n      <FeedbackOptions options={options}\n        addFeedback={this.addFeedback} />\n      </Section>\n      <Section title=\"Statistics\">{countTotalFeedback ?\n        <Statistics good={goodIncrement} neutral={neutralIncrement} bad={badIncrement} total={useEffect} percentage={1} /> : <Notification message=\"There is no feedback\" />}\n      </Section>\n    </div>\n  }\n"]},"metadata":{},"sourceType":"module"}