{"ast":null,"code":"var _jsxFileName = \"/Users/darina/Documents/GitHub/goit-react-hw-02-feedback/src/components/App.jsx\";\nimport React from \"react\";\nimport Feedback from \"./Feedback\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.addFeedback = e => {\n      this.setState({\n        [e]: this.state[e] + 1\n      });\n    };\n  }\n\n  countTotalFeedback() {\n    return this.state.good + this.state.neutral + this.state.bad;\n  }\n\n  countPositiveFeedbackPercentage() {\n    console.log(Math.round(this.state.good * 100 / (this.state.neutral + this.state.bad + this.state.good)));\n    return Math.round(this.state.good * 100 / (this.state.neutral + this.state.bad + this.state.good));\n  }\n\n  render() {\n    const {\n      good,\n      neutral,\n      bad\n    } = this.state;\n    const options = Object.keys(this.state);\n    const countTotalFeedback = this.countTotalFeedback();\n    const countPositiveFeedbackPercentage = this.countPositiveFeedbackPercentage();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Please leave feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(Feedback, {\n          options: options,\n          addFeedback: this.addFeedback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Good:\", good]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Neutral:\", neutral]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Bad:\", bad]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total:\", countTotalFeedback]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Positive feedback:\", countPositiveFeedbackPercentage && 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/darina/Documents/GitHub/goit-react-hw-02-feedback/src/components/App.jsx"],"names":["React","Feedback","App","Component","state","good","neutral","bad","addFeedback","e","setState","countTotalFeedback","countPositiveFeedbackPercentage","console","log","Math","round","render","options","Object","keys"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,OAAO,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/B;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KAD+B;;AAAA,SAOvCC,WAPuC,GAOzBC,CAAC,IAAI;AACjB,WAAKC,QAAL,CAAc;AAAE,SAACD,CAAD,GAAK,KAAKL,KAAL,CAAWK,CAAX,IAAgB;AAAvB,OAAd;AACD,KATsC;AAAA;;AAWvCE,EAAAA,kBAAkB,GAAG;AACnB,WAAO,KAAKP,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWE,OAA7B,GAAuC,KAAKF,KAAL,CAAWG,GAAzD;AACD;;AAEDK,EAAAA,+BAA+B,GAAG;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,KAAL,CAAY,KAAKZ,KAAL,CAAWC,IAAX,GAAkB,GAAnB,IAA2B,KAAKD,KAAL,CAAWE,OAAX,GAAqB,KAAKF,KAAL,CAAWG,GAAhC,GAAsC,KAAKH,KAAL,CAAWC,IAA5E,CAAX,CAAZ;AACJ,WAAOU,IAAI,CAACC,KAAL,CAAY,KAAKZ,KAAL,CAAWC,IAAX,GAAkB,GAAnB,IAA2B,KAAKD,KAAL,CAAWE,OAAX,GAAqB,KAAKF,KAAL,CAAWG,GAAhC,GAAsC,KAAKH,KAAL,CAAWC,IAA5E,CAAX,CAAP;AAGD;;AAGDY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAAyB,KAAKH,KAApC;AACA,UAAMc,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKhB,KAAjB,CAAhB;AACA,UAAMO,kBAAkB,GAAG,KAAKA,kBAAL,EAA3B;AACA,UAAMC,+BAA+B,GAAG,KAAKA,+BAAL,EAAxC;AAEA,wBAAO;AAAA,8BACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADK,eAEL;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,OAAO,EAAEM,OAAnB;AACA,UAAA,WAAW,EAAE,KAAKV;AADlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFK,eAML;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANK,eAOL;AAAA,gCACE;AAAA,iCAAI;AAAA,gCAASH,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,iCAAI;AAAA,mCAAYC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,iCAAI;AAAA,+BAAQC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,iCAAI;AAAA,iCAAUI,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA,iCAAI;AAAA,6CAAsBC,+BAA+B,IAAI,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPK;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAgBD;;AA7CsC","sourcesContent":["import React from \"react\";\nimport Feedback from \"./Feedback\";\n\nexport class App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n  \n  addFeedback = e => {\n    this.setState({ [e]: this.state[e] + 1 });\n  }\n\n  countTotalFeedback() {\n    return this.state.good + this.state.neutral + this.state.bad\n  }\n\n  countPositiveFeedbackPercentage() {\n        console.log(Math.round((this.state.good * 100) / (this.state.neutral + this.state.bad + this.state.good)));\n    return Math.round((this.state.good * 100) / (this.state.neutral + this.state.bad + this.state.good))\n\n\n  }\n\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const options = Object.keys(this.state)\n    const countTotalFeedback = this.countTotalFeedback()\n    const countPositiveFeedbackPercentage = this.countPositiveFeedbackPercentage()\n\n    return <div>\n      <h1>Please leave feedback</h1>\n      <ul>\n        <Feedback options={options}\n        addFeedback={this.addFeedback}/>\n      </ul>\n      <h2>Statistics</h2>\n      <ul>\n        <li><p>Good:{good}</p></li>\n        <li><p>Neutral:{neutral}</p></li>\n        <li><p>Bad:{bad}</p></li>\n        <li><p>Total:{countTotalFeedback}</p></li>\n        <li><p>Positive feedback:{countPositiveFeedbackPercentage && 0}</p></li>\n      </ul>\n\n    </div>\n  }\n}\n"]},"metadata":{},"sourceType":"module"}